/* eslint-disable */
export default {
  ru: "Russian",
  en: "English",
  appBarTitle: "SquareGPS test task",
  aboutTackTitle: "About the task",
  mapTitle: "Map",
  markersTitle: "Markers:",
  markerName: "Marker №",
  errorGetMarkers: 'Error receiving markers!',
  errorAddMarker: "Error adding marker!",
  errorGetAddress: "Error getting address from marker coordinates!",
  errorPageText: "Error 404! Page not found!",
  errorPageButton: "Go back to main page",
  aboutPageH1: "Hello! Thank you for agreeing to accept the test assignment for the position of Frontend Developer (VueJS). We hope to see you there soon. social Security",
  aboutPageH2: "SquareGPS test task",
  aboutPageP1BeforeStrong1: "You need to write an application using",
  aboutPageP1Strong1: "  Vuejs, Vuex, VueRouter, Vuetify.",
  aboutPageP1AfterStrong1: "The application header should contain a menu of 2 items: ",
  aboutPageP1Strong2: "About the task",
  and: " and ",
  aboutPageP1Strong3: "Map.",
  aboutPageP1AfterStrong3: "The main part of the application should display the contents of the sections.",
  aboutPageH3: "Section “About the task”",
  aboutPageP2: "The section should contain the text of this assignment, laid out in a similar way.",
  aboutPageH4: "Section “Map”",
  aboutPageP3BeforeList: "There should be a map and a list on the screen (see example): ",
  aboutPageP3Item1P1: "When you click on the add button, the map should go into the mode of adding a marker: a marker should appear at the click location, and an entry with the address of the point should appear in the list",
  aboutPageP3Item1P2: "To find an address, you can use any free geocoding API, for example: ",
  aboutPageP3Item1P3: "If the address is not found, you must display an error and not add the marker to the list.",
  aboutPageP3Item2: "When you click on the marker, the entry in the list should be highlighted",
  aboutPageP3Item3: "When you click on an entry in the list, the map should be centered on the marker",
  aboutPageP3Item4: "Markers should be stored locally and not disappear after page reload",
  aboutPageP3Item5: "The address bar should display the id of the selected marker",
  aboutPageP4: "Local data storage should be organized in the form of a service that emulates the backend. (Requires a Backend class that pseudo-asynchronously stores data in localStorage)",
  aboutPageP5: "Additionally: ",
  aboutPageP5Item1: "Consider display on mobile devices",
  aboutPageP5Item2: "Provide localization",
  aboutPageP5Item3BeforeStrong: "You need using ",
  aboutPageP5Item3Strong: "jest ",
  aboutPageP5Item3AfterStrong: "to write 1 unit test for any component",
  aboutPageP6Strong: "Reminder: ",
  aboutPageP6: "the test task is designed to demonstrate the ability to write good modular code, as well as the ability to use the specified technologies and more. This is code to be proud of.",
  aboutPageP7: "Example: ",
  close: "Close",
  noMarkersData: "There are no markers on the map",
  labelSearchMarkersInput: "Search for a marker by id, coordinates or address",
};
